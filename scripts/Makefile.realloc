# $Id$

DATA_DIR = /data2/work/wisdom/newsid
NEWSIDS = newsids
HOST_FILE = hosts
HOST_FILE_OF_NEXT_ROUND = hosts.next.round
PERL = perl
WORKSPACE = /data2/work/$$USER/tsubaki/realloc
NODE_PREFIX = iccc
NODE_SUFFIX = crawl.kclab.jgn2.jp
NUM_OF_FILES_PER_HOST = 1000000
RMFILES = rmfiles

IDX_DIR = $(DATA_DIR)/idxs
SID2TID = $(IDX_DIR)/sid2tid
SF_DIR = $(DATA_DIR)/xmls
TERM_DIR = $(DATA_DIR)/terms
LINK_DAT_DIR = $(DATA_DIR)/xmls.link
TERM_LINK_DIR = $(DATA_DIR)/terms.link

SCRIPT_DIR = $(HOME)/cvs/SearchEngine/scripts
UTILS_DIR = $(HOME)/cvs/Utils

DIST_HOST = $(HOSTNAME)
DIST_DIR = $(WORKSPACE)
CONV_LIST = $(DIST_DIR)/conv.list
SID_RANGE = $(DIST_DIR)/sid.range
TARGETIDS = $(DATA_DIR)/targetids.next.round

OPTIONS=-oldfiles $(DIST_DIR)/node2sids.cdb.keymap -newfiles $(NEWSIDS) -hosts $(HOST_FILE_OF_NEXT_ROUND) -num_of_files_per_host $(NUM_OF_FILES_PER_HOST) -sid_range $(SID_RANGE) -suffix $(NODE_SUFFIX)

realloc: collect_filepath make_convlist copy_data copy_targetids


# 次ラウンドで各ノードが管理することになるsid一覧をコピーする
copy_targetids:
	$(PERL) -I$(SCRIPT_DIR)/../cgi -I$(SCRIPT_DIR) $(SCRIPT_DIR)/lookup-host-by-sid.perl -sid_range $(SID_RANGE) -stdin < $(NEWSIDS) > $(NEWSIDS).w.hosts
	for h in `cut -f 1 -d ' ' $(SID_RANGE)` ; do grep $$h $(NEWSIDS).w.hosts | cut -f 1 -d ' ' > $(NEWSIDS).$$h ; done
	for h in `cut -f 1 -d ' ' $(SID_RANGE)` ; do scp $(NEWSIDS).$$h $$h:$(TARGETIDS) ; rm $(NEWSIDS).$$h ; done
	rm $(NEWSIDS).w.hosts

# 新しいhost2sidに従い、標準フォーマットデータ、リンクデータ、タームファイルのコピー
copy_data:
	gxpc use ssh $$HOSTNAME $(NODE_PREFIX)
	gxpc explore --children_hard_limit 1000 -t $(HOST_FILE_OF_NEXT_ROUND)

	gxpc e "mkdir $(WORKSPACE) 2> /dev/null"
	gxpc cd $(WORKSPACE)
	gxpc e mkdir -p $(SF_DIR) $(TERM_DIR) $(LINK_DAT_DIR) $(TERM_LINK_DIR) 2> /dev/null

	chmod 444 $(CONV_LIST)
	gxpc mw bcp $(DIST_HOST):$(CONV_LIST) $(WORKSPACE)/

	gxpc e "hostname | grep -v $$HOSTNAME"
	gxpc smask

#	標準フォーマットデータのコピー
	gxpc e 'cat $(CONV_LIST) | $(PERL) $(SCRIPT_DIR)/make-copyshell.perl -datadir $(SF_DIR) -workspace $(SF_DIR) -host $$HOSTNAME -prefix x -suffix *.xml.gz -delfiles $(WORKSPACE)/$(RMFILES).xmls > $(WORKSPACE)/cmd.xml.sh'
	gxpc e "sh $(WORKSPACE)/cmd.xml.sh"

#	term ファイルのコピー
	gxpc e 'cat $(CONV_LIST) | $(PERL) $(SCRIPT_DIR)/make-copyshell.perl -datadir $(TERM_DIR) -workspace $(TERM_DIR) -host $$HOSTNAME -prefix i -suffix *.idx.gz -delfiles $(WORKSPACE)/$(RMFILES).terms > $(WORKSPACE)/cmd.term.sh'
	gxpc e "sh $(WORKSPACE)/cmd.term.sh"

#	リンクデータのコピー
	gxpc e 'cat $(CONV_LIST) | $(PERL) $(SCRIPT_DIR)/make-copyshell.perl -datadir $(LINK_DAT_DIR) -workspace $(LINK_DAT_DIR) -host $$HOSTNAME -prefix x -suffix *.xml.gz -delfiles $(WORKSPACE)/$(RMFILES).links > $(WORKSPACE)/cmd.link.sh'
	gxpc e "sh $(WORKSPACE)/cmd.link.sh"

#	term.link ファイルのコピー
	gxpc e 'cat $(CONV_LIST) | $(PERL) $(SCRIPT_DIR)/make-copyshell.perl -datadir $(TERM_LINK_DIR) -workspace $(TERM_LINK_DIR) -host $$HOSTNAME -prefix i -suffix *.idx.gz -delfiles $(WORKSPACE)/$(RMFILES).termlinks > $(WORKSPACE)/cmd.termlink.sh'
	gxpc e "sh $(WORKSPACE)/cmd.termlink.sh"
	gxpc quit
	chmod 644 $(CONV_LIST)


# host2sidデータベースをひきながら、次のラウンドで利用するsidをどのノードに配置するか決定する
make_convlist:
	$(PERL) -I $(UTILS_DIR)/perl $(SCRIPT_DIR)/make-convlist.perl $(OPTIONS) > $(CONV_LIST)

# host2sidデータベースを作成
collect_filepath:
	gxpc use ssh $$HOSTNAME $(NODE_PREFIX)
	gxpc explore --children_hard_limit 1000 -t $(HOST_FILE)
	gxpc e "hostname | grep -v $$HOSTNAME"
	gxpc smask
	gxpc e mkdir $(WORKSPACE) 2> /dev/null
	gxpc e 'perl $(SCRIPT_DIR)/listup-sid.perl -rmfile $(IDX_DIR)/rmfiles -sid2tid $(SID2TID) | awk "{print \""$$HOSTNAME":\"\$$0}" > $(WORKSPACE)/node2sids'
	gxpc cd $$PWD

	mkdir -p $(DIST_DIR) 2> /dev/null
	rm -r $(DIST_DIR) 2> /dev/null
	mkdir -p $(DIST_DIR) 2> /dev/null

	gxpc e 'scp $(WORKSPACE)/node2sids $(DIST_HOST):$(DIST_DIR)/node2sids.$$HOSTNAME'
	gxpc quit

	cat $(DIST_DIR)/node2sids.iccc* > $(DIST_DIR)/node2sids
	rm $(DIST_DIR)/node2sids.iccc*
	cat $(DIST_DIR)/node2sids | rev | cut -f 1 -d / | rev | cut -f 2 -d ":" > $(DIST_DIR)/sids
	touch $(DIST_DIR)/node2sids.cdb.keymap
	paste $(DIST_DIR)/sids $(DIST_DIR)/node2sids | perl -I $(UTILS_DIR)/perl $(UTILS_DIR)/scripts/make-db.perl -dbname $(DIST_DIR)/node2sids.cdb -keymapfile node2sids.cdb.keymap -tab_delimiter


# 現在のTSUBAKIで利用しているSIDを収集する
collect_allsids:
	gxpc use ssh $$HOSTNAME $(NODE_PREFIX)
	gxpc explore --children_hard_limit 1000 -t $(HOST_FILE)
	gxpc e "hostname | grep -v $$HOSTNAME"
	gxpc smask
	gxpc e mkdir $(WORKSPACE) 2> /dev/null
	gxpc e 'perl $(SCRIPT_DIR)/listup-sid.perl -rmfile $(IDX_DIR)/rmfiles -sid2tid $(SID2TID) > $(WORKSPACE)/usedsids'
	gxpc cd $$PWD

	mkdir -p $(DIST_DIR) 2> /dev/null
	rm -r $(DIST_DIR) 2> /dev/null
	mkdir -p $(DIST_DIR) 2> /dev/null

	gxpc e 'scp $(WORKSPACE)/usedsids $(DIST_HOST):$(DIST_DIR)/usedsids.$$HOSTNAME'
	gxpc e rm $(WORKSPACE)/usedsids
	gxpc e rmdir $(WORKSPACE)
	gxpc quit

	mkdir $(WORKSPACE)/tmp
	sort -m -T $(WORKSPACE)/tmp $(WORKSPACE)/usedsids.* > $(WORKSPACE)/allsids
	rm -r $(WORKSPACE)/tmp $(WORKSPACE)/usedsids.*
