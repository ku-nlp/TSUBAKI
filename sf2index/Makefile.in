ID = 000
IDX0_SUFFIX = idx0
IDX1_SUFFIX = idx1
BASEDIR = $(shell pwd)
DATADIR = @DocumentPath@
TMPSFDIR = @DocumentPath@/tmp_xml0
HTMLS = $(wildcard $(DATADIR)/*.html)
XMLS = $(wildcard $(DATADIR)/*.xml)
IDXS = $(patsubst %.xml,%.$(IDX0_SUFFIX),$(XMLS))
MERGED_IDX = $(DATADIR)/$(ID).$(IDX1_SUFFIX)
MERGED_IDX_FINAL = $(DATADIR)/$(ID).idx
MERGED_IDX_DF = $(DATADIR)/$(ID).idx.df
MAPFILE = $(DATADIR)/sid2tid
XMLLIST = $(DATADIR)/$(ID).xmls
URL_TITLE_TXT = $(DATADIR)/$(ID).url_title
URLDB = $(DATADIR)/did2url.cdb
TITLEDB = $(DATADIR)/did2title.cdb
CNSDB = $(BASEDIR)/../data/cns.100M.cls.df1000.cdb
WWW2SF_SENTENCE_LENGTH_MAX = 130

UtilsDir = @UtilsPath@
WWW2sfDir = @WWW2sfPath@
SynGraphDir = @SynGraphPath@
SynDBDir = @SynGraphPath@/syndb/@MachineType@
SynGraphPerlDir = @SynGraphPath@/perl
JumanCommand = @JUMANPrefix@/bin/juman
KnpCommand = @KNPPrefix@/bin/knp
JumanrcFile = @JUMANPrefix@/etc/jumanrc
KnprcFile = @KNPPrefix@/etc/knprc

all: idx_bin idx_length dfdb url_title_db

html2sf:
	mkdir -p $(TMPSFDIR)
	$(WWW2sfDir)/tool/www2sf.sh -d $(SynGraphDir) -c $(CNSDB) $(DATADIR) $(TMPSFDIR)
	perl -I $(WWW2sfDir)/tool/perl -I $(SynGraphPerlDir) $(WWW2sfDir)/tool/scripts/add-knp-result-dir.perl -syngraph -syndbdir $(SynDBDir) -indir $(TMPSFDIR) -outdir $(DATADIR) -sentence_length_max $(WWW2SF_SENTENCE_LENGTH_MAX) -all -syndb_on_memory -jmncmd $(JumanCommand) -knpcmd $(KnpCommand) -jmnrc $(JumanrcFile) -knprc $(KnprcFile) -logfile add-knp-result-dir.log -embed_result_in_xml
	rm -rf $(TMPSFDIR) add-knp-result-dir.log

$(IDXS): $(DATADIR)/%.$(IDX0_SUFFIX) : $(DATADIR)/%.xml
	perl -I ../cgi $(BASEDIR)/sf2term.pl $< > $@

$(MERGED_IDX): $(IDXS)
	perl $(BASEDIR)/../scripts/merge_idx.pl -dir $(DATADIR) -suffix $(IDX0_SUFFIX) > $@

$(MERGED_IDX_FINAL): $(MERGED_IDX) $(MAPFILE)
	perl $(BASEDIR)/../scripts/merge_sorted_idx.pl -dir $(DATADIR) -suffix $(IDX1_SUFFIX) -mapfile $(MAPFILE) > $@

idx_bin: $(MERGED_IDX_FINAL)
	perl -I $(UtilsDir)/perl -I $(BASEDIR)/../scripts $(BASEDIR)/../scripts/binarize_idx.pl -syn $<

idx_length: $(MERGED_IDX_FINAL)
	perl $(BASEDIR)/../scripts/make-dlength-db.perl -txt $<

$(MERGED_IDX_DF): $(MERGED_IDX_FINAL)
	perl $(BASEDIR)/../scripts/idx2df.pl $<

dfdb: $(MERGED_IDX_DF)
	perl -I $(UtilsDir)/perl $(BASEDIR)/../scripts/make-df-db.perl --dir $(DATADIR) < $<

$(MAPFILE): $(MERGED_IDX)
	perl $(BASEDIR)/../scripts/make-mapfile.perl $(MERGED_IDX) > $@

$(XMLLIST):
	for f in $(DATADIR)/*.xml; do echo $$f; done > $@

$(URL_TITLE_TXT): $(XMLLIST)
	perl $(BASEDIR)/../scripts/extract-url-title.perl -files $(XMLLIST) > $(URL_TITLE_TXT)

url_title_db : $(URL_TITLE_TXT)
	perl $(BASEDIR)/../scripts/make-url-title-cdbs.perl --titledb $(TITLEDB) --urldb $(URLDB) $<

clean:
	rm -f $(IDXS) $(DATADIR)/*.$(IDX0_SUFFIX) $(MERGED_IDX) $(MERGED_IDX_FINAL) $(MERGED_IDX_DF) $(MAPFILE) $(XMLLIST) $(URL_TITLE_TXT) $(URLDB) $(TITLEDB) $(DATADIR)/idx*.word.dat* $(DATADIR)/idx*.dpnd.dat* $(DATADIR)/offset*.word*.cdb* $(DATADIR)/offset*.dpnd*.cdb* $(DATADIR)/*.doc_length.* $(DATADIR)/df.word.* $(DATADIR)/df.dpnd.*

clean_xml:
	rm -f $(XMLS)
